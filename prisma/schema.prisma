generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model user {
  id                      Int          @id @default(autoincrement())
  link                    String?      @unique
  username                String?      @unique @db.VarChar(100)
  usercolor               String?      @db.VarChar(10)
  email                   String       @unique @db.VarChar(100)
  password                String       @db.Text
  service                 Json
  avatar                  String?      @db.Text
  isAdmin                 Boolean      @default(false)
  friendship_UserToFriend friendship[] @relation("friendship_userTouser")
  friendship_FriendToUser friendship[] @relation("friendship_friendTouser")
  post                    post[]
  rating                  rating[]
  membership              membership[]
  message                 message[]
}

model friendship {
  id                           Int    @id @default(autoincrement())
  user                         Int
  friend                       Int
  type                         String @db.VarChar(50)
  user_friendship_userTouser   user   @relation("friendship_userTouser", fields: [user], references: [id], onUpdate: Restrict, map: "friendship_ibfk_1")
  user_friendship_friendTouser user   @relation("friendship_friendTouser", fields: [friend], references: [id], onUpdate: Restrict, map: "friendship_ibfk_2")

  @@index([friend], map: "friend")
  @@index([user], map: "user")
}

model post {
  id     Int      @id @default(autoincrement())
  userId Int
  user   user     @relation(fields: [userId], references: [id])
  title  String   @db.VarChar(50)
  text   String   @db.Text
  date   DateTime @default(now()) @db.Timestamp(0)
  image  String?   @db.VarChar(150)
  rating rating[]
}

model rating {
  id     Int    @id @default(autoincrement())
  userId Int
  user   user   @relation(fields: [userId], references: [id])
  postId Int
  post   post   @relation(fields: [postId], references: [id])
  type   String
}

model room {
  id         Int          @id @default(autoincrement())
  name       String
  membership membership[]
  message    message[]
}

model membership {
  id     Int  @id @default(autoincrement())
  roomId Int
  room   room @relation(fields: [roomId], references: [id])
  userId Int
  user   user @relation(fields: [userId], references: [id])
}

model message {
  id      Int      @id @default(autoincrement())
  date    DateTime @default(now()) @db.Timestamp(0)
  content String
  userId  Int
  user    user     @relation(fields: [userId], references: [id])
  roomId  Int
  room    room     @relation(fields: [roomId], references: [id])
}
